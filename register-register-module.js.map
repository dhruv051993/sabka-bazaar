{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/register/register-routing.module.ts","./src/app/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form;\n  errorMsg = '';\n  constructor(private router: Router, private productsService: ProductsService) { }\n\n  get firstname() {\n    return this.form.get('firstName')\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onSubmit() {\n    const usrData = {\n      name: this.form.value.firstName, email: this.form.value.email,\n      password: this.form.value.password, isActive: true\n    };\n    const registeredUsersData = JSON.parse(localStorage.getItem('userData')) || [];\n    const index = registeredUsersData.findIndex((item) => item.email === usrData.email);\n    if (index === -1) {\n      this.errorMsg = '';\n      this.productsService.setDataInLocalStorage(usrData);\n      this.router.navigateByUrl('/product');\n    } else {\n      this.errorMsg = 'User with this emailId already exist';\n    }\n  }\n}\n","<div class=\"register-container\">\n    <div class=\"sign-up \">\n        <h2>SignUp</h2>\n        <div>We do not share ypu personal details with anyone</div>\n    </div>\n    <div class=\"form-container\">\n        <form name=\"form\" [formGroup]=\"form\" (ngSubmit)=\"form.valid && onSubmit()\">\n            <div class=\"form-group invalid-feedback\" *ngIf=\"errorMsg\">{{errorMsg}}</div>\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"firstName\"\n                    [ngClass]=\"{'is-invalid':form.get('firstName').touched && form.get('firstName').invalid}\"\n                    required />\n                <div *ngIf=\"form.get('firstName').touched && form.get('firstName').invalid \" class=\"invalid-feedback\">\n                    <div>First Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"lastName\"\n                    [ngClass]=\"{'is-invalid':form.get('lastName').touched && form.get('lastName').invalid}\" required />\n                <div *ngIf=\"form.get('lastName').touched && form.get('lastName').invalid\" class=\"invalid-feedback\">\n                    <div>Last Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                    [ngClass]=\"{'is-invalid':form.get('email').touched && form.get('email').invalid}\" />\n                <div *ngIf=\"form.get('email').touched && form.get('email').invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"form.get('email').errors.required\">Email Name is required</div>\n                    <div *ngIf=\"form.get('email').errors.email\">Email must be a valid email Address</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\"\n                    [ngClass]=\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\" />\n                <div *ngIf=\"form.get('password').touched && form.get('password').invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"form.get('password').errors.required\">Password is required</div>\n                    <div *ngIf=\"form.get('password').errors.minlength\">Password must be a letaset 6\n                        charector</div>\n                </div>\n\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary signup-btn\" [disabled]=\"!form.valid\">Signup</button>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}