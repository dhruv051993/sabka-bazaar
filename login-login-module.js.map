{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginRoutingModule } from './login-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form;\n  errorMsg = ''\n  constructor(private router: Router, private productsService: ProductsService) { }\n\n  get firstname() {\n    return this.form.get('firstName')\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onSubmit() {\n    let registeredUsersData = JSON.parse(localStorage.getItem('userData')) || [];\n    const index = registeredUsersData.findIndex((item) => (item.email === this.form.value.email && item.password === this.form.value.password));\n    if (index >= 0) {\n      registeredUsersData[index].isActive = true;\n      this.productsService.setLoggedInUser(registeredUsersData[index].name)\n      localStorage.setItem(\"userData\", JSON.stringify(registeredUsersData));\n      this.router.navigateByUrl('/product');\n      this.errorMsg = '';\n    } else {\n      this.errorMsg = 'Please enter valid username and password'\n    }\n  }\n}\n","<div class=\"login-container\">\n    <div class=\"sign-up \">\n        <h2>Login</h2>\n        <div>Get access to your Orders,Wishlist and Recommendations</div>\n    </div>\n    <div class=\"form-container\">\n        <form name=\"form\" [formGroup]=\"form\" (ngSubmit)=\"form.valid && onSubmit()\">\n            <div class=\"form-group invalid-feedback\" *ngIf=\"errorMsg\">{{errorMsg}}</div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                    [ngClass]=\"{'is-invalid':form.get('email').touched && form.get('email').invalid}\" />\n                <div *ngIf=\"form.get('email').touched && form.get('email').invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"form.get('email').errors.required\">Email Name is required</div>\n                    <div *ngIf=\"form.get('email').errors.email\">Email must be a valid email Address</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\"\n                    [ngClass]=\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\" />\n                <div *ngIf=\"form.get('password').touched && form.get('password').invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"form.get('password').errors.required\">Password is required</div>\n                    <div *ngIf=\"form.get('password').errors.minlength\">Password must be a letaset 6\n                        charector</div>\n                </div>\n\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary login-btn\" [disabled]=\"!form.valid\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}